name:CMake-windows
//GitHub Actions 工作流配置文件，用于自动化构建和测试一个 C++ 项目
on:
  // master 分支收到push操作，触发工作流
  push:
     branches:[master]

concurrency:
  group: windows-${{ github.ref }}
  cancel-in-progress: true



jobs:
  build:
    runs-on：windows-latest
    //定义一个作业（job）build，运行在 windows-latest 操作系统环境下。
    
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
    
      //使用 actions/checkout 动作来检出代码库。
      -uses:actions/checkout@v2
      //使用 Microsoft 提供的 setup-msbuild 动作来设置 MSVC 开发工具集。
      -uses:mircorsoft/setup-msbuild@v1.0.2
      //安装 MSVC 工具集。
      - name: Install CMake
        run: |
          curl -LO https://github.com/Kitware/CMake/releases/download/v3.20.3/cmake-3.20.3-windows-x86_64.zip
          tar -xzf cmake-3.20.3-windows-x86_64.zip
          mv cmake-3.20.3-windows-x86_64 C:\cmake
          
       - name: Install Dependencies
        run: |
          # clear buildtrees after each package installation to reduce disk space requirements
          $packages = `
            "openblas:x64-windows",
            "opencv:x64-windows",
            "lapack:x64-windows",
            "superlu:x64-windows",
            "glog:x64-windows",
            "gtest:x64-windows",
            "benchmark:x64-windows",
            "armadillo:x64-windows"
          ${{ env.RUNVCPKG_VCPKG_ROOT }}/vcpkg.exe upgrade `
            --overlay-triplets="${{ github.workspace }}/triplets_overlay" `
            --no-dry-run
          ${{ env.RUNVCPKG_VCPKG_ROOT }}/vcpkg.exe install `
            --overlay-triplets="${{ github.workspace }}/triplets_overlay" `
            --clean-after-build `
            $packages
      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --
      - name: Test
        working-directory: ${{github.workspace}}
        run: ${{github.workspace}}/build/test/Release/test.exe

    
